/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.habravan.stampmanagementsystem.gui;

import com.formdev.flatlaf.FlatDarculaLaf;
import com.habravan.stampmanagementsystem.Stamp;
import com.habravan.stampmanagementsystem.StampManagement;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Dorina
 */
public class StampManagementGUI extends javax.swing.JFrame {

    StampManagement stampManagement = new StampManagement();
    private StampManagementGUI mainMenu;  // The  mainMenu reference to be used later in the logic.

    private boolean isLoggedIn = false; // Verify if  the user is logged in
    
    
    // Creates new form StampManagementGUI
    
    public StampManagementGUI() {
        this.mainMenu = this; 

        initComponents();
        loadStampsFromCSV();
        

        setupCategoryTabs();
        commemorativeScrollPane.setViewportView(commemorativePanel);
        commemorativePanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20)); 

        definitiveScrollPane.setViewportView(definitivePanel);
        definitivePanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        mintScrollPane.setViewportView(mintPanel);
        mintPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        usedScrollPane.setViewportView(usedPanel);
        usedPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        commemorativeScrollPane.setViewportView(commemorativePanel);
        commemorativePanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        definitiveScrollPane.setViewportView(definitivePanel);
        definitivePanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        mintScrollPane.setViewportView(mintPanel);
        mintPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        usedScrollPane.setViewportView(usedPanel);
        usedPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));

        commemorativePanel.setLayout(new GridLayout(0, 2, 20, 20)); 
        commemorativeScrollPane.setViewportView(commemorativePanel);
        commemorativeScrollPane.setPreferredSize(new Dimension(500, 300)); 
        commemorativeScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

        definitivePanel.setLayout(new GridLayout(0, 2, 20, 20));
        definitiveScrollPane.setViewportView(definitivePanel);
        definitiveScrollPane.setPreferredSize(new Dimension(500, 300));
        definitiveScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

        mintPanel.setLayout(new GridLayout(0, 2, 20, 20));
        mintScrollPane.setViewportView(mintPanel);
        mintScrollPane.setPreferredSize(new Dimension(500, 300));
        mintScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

        usedPanel.setLayout(new GridLayout(0, 2, 20, 20));
        usedScrollPane.setViewportView(usedPanel);
        usedScrollPane.setPreferredSize(new Dimension(500, 300));
        usedScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);


        
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        registerButton = new java.awt.Button();
        loginButton = new java.awt.Button();
        closeButton = new java.awt.Button();
        commemorativeScrollPane = new javax.swing.JScrollPane();
        commemorativePanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        definitiveScrollPane = new javax.swing.JScrollPane();
        definitivePanel = new javax.swing.JPanel();
        mintScrollPane = new javax.swing.JScrollPane();
        mintPanel = new javax.swing.JPanel();
        usedScrollPane = new javax.swing.JScrollPane();
        usedPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        titleTextArea = new javax.swing.JTextArea();
        nameTitleLable = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        registerButton.setForeground(new java.awt.Color(153, 102, 0));
        registerButton.setLabel("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        loginButton.setForeground(new java.awt.Color(153, 102, 0));
        loginButton.setLabel("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        closeButton.setForeground(new java.awt.Color(153, 102, 0));
        closeButton.setLabel("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        commemorativePanel.setLayout(null);
        commemorativePanel.add(tabbedPane);
        tabbedPane.setBounds(-229, -30, 1840, 590);

        commemorativeScrollPane.setViewportView(commemorativePanel);

        definitiveScrollPane.setViewportView(definitivePanel);

        mintScrollPane.setViewportView(mintPanel);

        usedScrollPane.setViewportView(usedPanel);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StampClub.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());

        titleTextArea.setEditable(false);
        titleTextArea.setBackground(new java.awt.Color(153, 153, 153));
        titleTextArea.setColumns(20);
        titleTextArea.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        titleTextArea.setForeground(new java.awt.Color(236, 236, 236));
        titleTextArea.setRows(5);
        titleTextArea.setText("\n- Register and log in to start managing your stamps.\n- Browse stamps in categories: Commemorative, Definitive, Mint, and Used.\n- Add stamps to your ownership list or wishlist.\n");
        titleTextArea.setToolTipText("");
        titleTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(titleTextArea);

        nameTitleLable.setBackground(new java.awt.Color(153, 153, 153));
        nameTitleLable.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        nameTitleLable.setForeground(new java.awt.Color(255, 255, 255));
        nameTitleLable.setText("                  Welcome to the Newcastle Philatelist Club Stamp Management System");

        jTextArea1.setBackground(new java.awt.Color(153, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(165, 122, 37));
        jTextArea1.setRows(5);
        jTextArea1.setText("                                                     Manage Stamps");
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout titlePanelLayout = new javax.swing.GroupLayout(titlePanel);
        titlePanel.setLayout(titlePanelLayout);
        titlePanelLayout.setHorizontalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(titlePanelLayout.createSequentialGroup()
                                .addComponent(nameTitleLable, javax.swing.GroupLayout.DEFAULT_SIZE, 1196, Short.MAX_VALUE)
                                .addContainerGap())
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        titlePanelLayout.setVerticalGroup(
            titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addComponent(nameTitleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(titlePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("      Definitive");

        jLabel3.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Commemorative");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("      Mint");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Used");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(titlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(76, Short.MAX_VALUE)
                        .addComponent(commemorativeScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)
                        .addComponent(definitiveScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(mintScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(usedScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commemorativeScrollPane)
                    .addComponent(definitiveScrollPane)
                    .addComponent(mintScrollPane)
                    .addComponent(usedScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 393, Short.MAX_VALUE)
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        loginButton.getAccessibleContext().setAccessibleDescription("Login");

        pack();
    }// </editor-fold>//GEN-END:initComponents

   

    
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        new UserRegisterGUI(mainMenu).setVisible(true);
        dispose();// The method closes the main menu

    }//GEN-LAST:event_registerButtonActionPerformed

    // Show the login screen
    private void showLogin() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
   
                new UserLoginGUI(mainMenu).setVisible(true);
                dispose(); // Close the main menu window when login opens
            }
        });
    }
    // In StampManagementGUI class
    private void openRegisterScreen() {
        new UserRegisterGUI(StampManagementGUI.this).setVisible(true);  // 'this' is the instance of StampManagementGUI
        dispose();  // Close current window 
    }


    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        if (this != null) {
            new UserLoginGUI(mainMenu).setVisible(true); 
            dispose();  // Close the current window
        } else {
            System.out.println("Error: StampManagementGUI instance is null!");
        }

    }//GEN-LAST:event_loginButtonActionPerformed

    // Set the logged-in status
    public void setLoggedIn(boolean isLoggedIn) {
        this.isLoggedIn = isLoggedIn;
    }


    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0); //The method to exit the application
    }//GEN-LAST:event_closeButtonActionPerformed

    
    //Loads stamps from CSV file 
    private void loadStampsFromCSV() {
        commemorativePanel.removeAll();
        definitivePanel.removeAll();
        mintPanel.removeAll();
        usedPanel.removeAll();

        List<Stamp> stamps = stampManagement.getStamps();

        // Verifying and iterating  stamps and add them to respective panels
        for (Stamp stamp : stamps) {
            JPanel stampCard = createStampCard(stamp);
            stampCard.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    // If user is not logged in the it will require an account to register or login.
                    if (!isLoggedIn) {
                        JOptionPane.showMessageDialog(StampManagementGUI.this, "Please register an account or log in to manage stamps.");
                        new UserRegisterGUI(StampManagementGUI.this).setVisible(true);
                        dispose(); // Close the main menu window
                    } else {
                        // User can manage stamps if it is logged in.
                        JOptionPane.showMessageDialog(StampManagementGUI.this, "You can now manage the stamp: " + stamp.getStampName());
                    }
                }
            });

            switch (stamp.getStampCategory().toLowerCase()) {
                case "commemorative":
                    commemorativePanel.add(stampCard);
                    break;
                case "definitive":
                    definitivePanel.add(stampCard);
                    break;
                case "mint":
                    mintPanel.add(stampCard);
                    break;
                case "used":
                    usedPanel.add(stampCard);
                    break;
            }
        }

        commemorativePanel.revalidate();
        commemorativePanel.repaint();
        definitivePanel.revalidate();
        definitivePanel.repaint();
        mintPanel.revalidate();
        mintPanel.repaint();
        usedPanel.revalidate();
        usedPanel.repaint();
    }

    //Loads stamps
    private void stampsFromCSV() {
        definitiveScrollPane.removeAll();
        commemorativeScrollPane.removeAll();
        usedScrollPane.removeAll();
        mintScrollPane.removeAll();

        List<Stamp> stamps = stampManagement.getStamps();

        for (Stamp stamp : stamps) {
            JPanel stampCard = createStampCard(stamp);

            switch (stamp.getStampCategory()) {
                case "Definitive":
                    definitiveScrollPane.add(stampCard);
                    break;
                case "Commemorative":
                    commemorativeScrollPane.add(stampCard);
                    break;
                case "Used":
                    usedScrollPane.add(stampCard);
                    break;
                case "Mint":
                    mintScrollPane.add(stampCard);
                    break;
            }
        }

        definitiveScrollPane.revalidate();
        commemorativeScrollPane.revalidate();
        usedScrollPane.revalidate();
        mintScrollPane.revalidate();
    }

    
    //Creates a stamp holder in the scroll panel
    private JPanel createStampCard(Stamp stamp) {
        JPanel card = new JPanel();
        card.setLayout(new BoxLayout(card, BoxLayout.Y_AXIS)); // Align elements vertically
        card.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        card.setPreferredSize(new Dimension(150, 220));

        // Load and resize image for the stamp
        String imagePath = stamp.getImagePath();
        File imageFile = new File(imagePath.replace("/", File.separator)); 

        JLabel imageLabel;
        if (imageFile.exists()) {
            ImageIcon icon = new ImageIcon(new ImageIcon(imageFile.getAbsolutePath()).getImage()
                    .getScaledInstance(130, 90, Image.SCALE_SMOOTH)); // Smaller image size
            imageLabel = new JLabel(icon);
        } else {
            imageLabel = new JLabel("No Image Available", SwingConstants.CENTER);
        }

        // Stamp info
        JLabel infoLabel = new JLabel("<html><b>" + stamp.getStampName() + "</b><br>Year: " + stamp.getStampYear() + "</b><br>Category: " + stamp.getStampCategory()
                + "<br>Price: $" + stamp.getPrice() + "<br>" + stamp.getDescription() + "</html>", SwingConstants.CENTER);

        // Add image and info to the card
        card.add(imageLabel);
        card.add(infoLabel);

        return card;
    }

    private void setupCategoryTabs() {
        // Add the panels to the tabs (commemorative, definitive, mint, used)
        JTabbedPane tabbedPane = new JTabbedPane();
        tabbedPane.addTab("Commemorative", commemorativePanel);
        tabbedPane.addTab("Definitive", definitivePanel);
        tabbedPane.addTab("Mint", mintPanel);
        tabbedPane.addTab("Used", usedPanel);

        // Add tabbedPane to the main window
        this.getContentPane().add(tabbedPane, BorderLayout.CENTER);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
 
            // set Dark mode theme
             UIManager.setLookAndFeel(new FlatDarculaLaf());
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new StampManagementGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button closeButton;
    private javax.swing.JPanel commemorativePanel;
    private javax.swing.JScrollPane commemorativeScrollPane;
    private javax.swing.JPanel definitivePanel;
    private javax.swing.JScrollPane definitiveScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.Button loginButton;
    private javax.swing.JPanel mintPanel;
    private javax.swing.JScrollPane mintScrollPane;
    private javax.swing.JLabel nameTitleLable;
    private java.awt.Button registerButton;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel titlePanel;
    private javax.swing.JTextArea titleTextArea;
    private javax.swing.JPanel usedPanel;
    private javax.swing.JScrollPane usedScrollPane;
    // End of variables declaration//GEN-END:variables
}
