/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.habravan.stampmanagementsystem.gui;

import com.habravan.stampmanagementsystem.gui.UserDashboardGUI;
import com.habravan.stampmanagementsystem.LoginSystem;
import com.habravan.stampmanagementsystem.User;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;

/**
 *
 * @author Dorina
 */
public class UserLoginGUI extends javax.swing.JFrame {

    private StampManagementGUI mainMenu;
    private UserDashboardGUI dashboard;
    LoginSystem loginSystem = new LoginSystem();
    
    // currentUser is declared as static and now could be access globally
    public static User currentUser = null;

    /**
     * Creates new form UserLoginGUI
     *
     * @param mainMenu
     */
    public UserLoginGUI(StampManagementGUI mainMenu) {
        // mainMenu - passing parameter
        this.mainMenu = mainMenu;
        initComponents();
    }

    private void initiateComponents() {
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                // Retrieve the username and password entered by the user
                String username = usernameTextfield.getText().trim();
                String password = new String(passwordField.getPassword()).trim();

                // Validate username and password
                if (loginSystem.login(username, password)) { 
                    // Login successful
                    JOptionPane.showMessageDialog(UserLoginGUI.this, "Login successful! Now you can manage your ownership and wishlist stamps!");

                    // Ensure mainMenu is not null and set loggedIn to true
                    if (mainMenu != null) {
                        mainMenu.setLoggedIn(true);  // Update login status in the main menu
                    } else {
                        System.out.println("Error: mainMenu is null!");
                    }

                    // Open the main menu window after login
                    mainMenu.setVisible(true); 

                    // Close the login window
                    dispose();
                } else {
                    // Invalid credentials 
                    JOptionPane.showMessageDialog(UserLoginGUI.this, "Invalid username or password!");
                }

                System.out.println("Username: " + username);
                System.out.println("Password: " + password);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLogin = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        usernameTextfield = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLogin.setText("         Login to your Account");

        usernameLabel.setText("Username :");

        passwordLabel.setText("Password :");

        usernameTextfield.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(181, 150, 87)));

        passwordField.setText("jPasswordField1");
        passwordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(181, 150, 87)));
        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(181, 150, 87)));
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(181, 150, 87)));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordLabel)
                            .addComponent(usernameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernameTextfield)
                            .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(titleLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(titleLogin)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(loginButton)
                .addGap(18, 18, 18)
                .addComponent(backButton)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        // Retrieve the username and password entered by the user
        // Get the username and password entered by the user
        String username = usernameTextfield.getText().trim();
        String password = new String(passwordField.getPassword()).trim();

    System.out.println("Attempting login for user: " + usernameTextfield.getText());

   

    // Check if currentUser is null
    if (currentUser == null) {
        System.out.println("Error: currentUser is null.");
    } else {
        System.out.println("User logged in: " + currentUser.getUsername());
    }
        
        // Validate the login credentials
        if (loginSystem.login(username, password)) { 
            currentUser = new User(username);
            JOptionPane.showMessageDialog(UserLoginGUI.this, "Login successful!");

            javax.swing.SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    new UserDashboardGUI(currentUser).setVisible(true);  
                    // Create UserDashboardGUI object and pass currentUser to it and then currentUser could be accessed in the UserDasboardGUI class.
                    UserDashboardGUI dashboard = new UserDashboardGUI(currentUser);
                    
                    dashboard.loadListsAfterLogin();
                    dashboard.loadUserData();
                    // Load the user's data after login
                   
                }
            });

//            dashboard.loadListsAfterLogin();  // Load lists after successful login
            dashboard.setVisible(true);  // Make dashboard visible

            // login window after successful login
            dispose();
        } else {
            // Show an error message if the credentials are invalid
            JOptionPane.showMessageDialog(UserLoginGUI.this, "Invalid username or password!");
        }


    }//GEN-LAST:event_loginButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new StampManagementGUI().setVisible(true);
        dispose();//This method to go back to the main page.
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        // Initialise mainMenu (StampManagementGUI)
        final StampManagementGUI mainMenu = new StampManagementGUI();
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                new UserLoginGUI(mainMenu).setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel titleLogin;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextfield;
    // End of variables declaration//GEN-END:variables
}
